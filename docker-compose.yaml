services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: postgres_container
    environment:
      POSTGRES_USER: justas
      POSTGRES_PASSWORD: justas
      POSTGRES_DB: subscription
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U justas -d subscription"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/Training-Subscription
      dockerfile: Dockerfile
    container_name: spring_boot_container
    ports:
      - "8092:8090"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_network
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/subscription
      SPRING_DATASOURCE_USERNAME: justas
      SPRING_DATASOURCE_PASSWORD: justas
      SPRING_JPA_HIBERNATE_DDL_AUTO: create

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge

